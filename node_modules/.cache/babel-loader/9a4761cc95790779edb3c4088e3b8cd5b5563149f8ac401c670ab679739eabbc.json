{"ast":null,"code":"import _Reflect$construct from \"core-js-pure/stable/reflect/construct.js\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _concatInstanceProperty from \"core-js-pure/stable/instance/concat.js\";\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Wrapper from './wrapper';\nimport { parseSize, setGroupedTimeout, calculateBorderRadius, getNullableText } from '../utils';\nvar AvatarText = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AvatarText, _React$PureComponent);\n  var _super = _createSuper(AvatarText);\n  function AvatarText() {\n    var _context;\n    var _this;\n    _classCallCheck(this, AvatarText);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, _concatInstanceProperty(_context = [this]).call(_context, args));\n    _defineProperty(_assertThisInitialized(_this), \"_scaleTextNode\", function (node) {\n      var retryTTL = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n      var _this$props = _this.props,\n        unstyled = _this$props.unstyled,\n        textSizeRatio = _this$props.textSizeRatio,\n        textMarginRatio = _this$props.textMarginRatio,\n        avatar = _this$props.avatar;\n      _this._node = node;\n      if (!node || !node.parentNode || unstyled || avatar.src || !_this._mounted) return;\n      var spanNode = node.parentNode;\n      var tableNode = spanNode.parentNode;\n      var _spanNode$getBounding = spanNode.getBoundingClientRect(),\n        containerWidth = _spanNode$getBounding.width,\n        containerHeight = _spanNode$getBounding.height; // Whenever the avatar element is not visible due to some CSS\n      // (such as display: none) on any parent component we will check\n      // whether the component has become visible.\n      //\n      // The time between checks grows up to half a second in an attempt\n      // to reduce flicker / performance issues.\n\n      if (containerWidth == 0 && containerHeight == 0) {\n        var ttl = Math.min(retryTTL * 1.5, 500);\n        setGroupedTimeout(function () {\n          return _this._scaleTextNode(node, ttl);\n        }, ttl);\n        return;\n      } // If the tableNode (outer-container) does not have its fontSize set yet,\n      // we'll set it according to \"textSizeRatio\"\n\n      if (!tableNode.style.fontSize) {\n        var baseFontSize = containerHeight / textSizeRatio;\n        tableNode.style.fontSize = \"\".concat(baseFontSize, \"px\");\n      } // Reset font-size such that scaling works correctly (#133)\n\n      spanNode.style.fontSize = null; // Measure the actual width of the text after setting the container size\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n        textWidth = _node$getBoundingClie.width;\n      if (textWidth < 0) return; // Calculate the maximum width for the text based on \"textMarginRatio\"\n\n      var maxTextWidth = containerWidth * (1 - 2 * textMarginRatio); // If the text is too wide, scale it down by (maxWidth / actualWidth)\n\n      if (textWidth > maxTextWidth) spanNode.style.fontSize = \"calc(1em * \".concat(maxTextWidth / textWidth, \")\");\n    });\n    return _this;\n  }\n  _createClass(AvatarText, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._mounted = true;\n      this._scaleTextNode(this._node);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        className = _this$props2.className,\n        round = _this$props2.round,\n        unstyled = _this$props2.unstyled,\n        title = _this$props2.title,\n        name = _this$props2.name,\n        value = _this$props2.value,\n        avatar = _this$props2.avatar;\n      var size = parseSize(this.props.size);\n      var initialsStyle = unstyled ? null : {\n        width: size.str,\n        height: size.str,\n        lineHeight: 'initial',\n        textAlign: 'center',\n        color: this.props.fgColor,\n        background: avatar.color,\n        borderRadius: calculateBorderRadius(round)\n      };\n      var tableStyle = unstyled ? null : {\n        display: 'table',\n        tableLayout: 'fixed',\n        width: '100%',\n        height: '100%'\n      };\n      var spanStyle = unstyled ? null : {\n        display: 'table-cell',\n        verticalAlign: 'middle',\n        fontSize: '100%',\n        whiteSpace: 'nowrap'\n      }; // Ensure the text node is updated and scaled when any of these\n      // values changed by calling the `_scaleTextNode` method using\n      // the correct `ref`.\n\n      var key = [avatar.value, this.props.size].join('');\n      return /*#__PURE__*/React.createElement(Wrapper, this.props, /*#__PURE__*/React.createElement(\"div\", {\n        className: className + ' sb-avatar__text',\n        style: initialsStyle,\n        title: getNullableText(title, name || value)\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: tableStyle\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: spanStyle\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        ref: this._scaleTextNode,\n        key: key\n      }, avatar.value)))));\n    }\n  }]);\n  return AvatarText;\n}(React.PureComponent);\n_defineProperty(AvatarText, \"propTypes\", {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  avatar: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  className: PropTypes.string,\n  unstyled: PropTypes.bool,\n  fgColor: PropTypes.string,\n  textSizeRatio: PropTypes.number,\n  textMarginRatio: PropTypes.number,\n  round: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n});\n_defineProperty(AvatarText, \"defaultProps\", {\n  className: '',\n  fgColor: '#FFF',\n  round: false,\n  size: 100,\n  textSizeRatio: 3,\n  textMarginRatio: .15,\n  unstyled: false\n});\nexport { AvatarText as default };","map":{"version":3,"names":["_Reflect$construct","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_concatInstanceProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","arguments","apply","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","React","PropTypes","Wrapper","parseSize","setGroupedTimeout","calculateBorderRadius","getNullableText","AvatarText","_React$PureComponent","_super","_context","_this","_len","length","args","Array","_key","node","retryTTL","undefined","_this$props","props","unstyled","textSizeRatio","textMarginRatio","avatar","_node","parentNode","src","_mounted","spanNode","tableNode","_spanNode$getBounding","getBoundingClientRect","containerWidth","width","containerHeight","height","ttl","Math","min","_scaleTextNode","style","fontSize","baseFontSize","concat","_node$getBoundingClie","textWidth","maxTextWidth","key","value","componentDidMount","componentWillUnmount","render","_this$props2","className","round","title","name","size","initialsStyle","str","lineHeight","textAlign","color","fgColor","background","borderRadius","tableStyle","display","tableLayout","spanStyle","verticalAlign","whiteSpace","join","createElement","ref","PureComponent","string","object","oneOfType","bool","number","default"],"sources":["/Users/ignaciogonzalez-bueno/Documents/IronHack/Week6/Day5/Project/CinemXperience-Client/client/node_modules/react-avatar/es/components/text.js"],"sourcesContent":["import _Reflect$construct from \"core-js-pure/stable/reflect/construct.js\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _concatInstanceProperty from \"core-js-pure/stable/instance/concat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Wrapper from './wrapper';\nimport { parseSize, setGroupedTimeout, calculateBorderRadius, getNullableText } from '../utils';\n\nvar AvatarText = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AvatarText, _React$PureComponent);\n\n  var _super = _createSuper(AvatarText);\n\n  function AvatarText() {\n    var _context;\n\n    var _this;\n\n    _classCallCheck(this, AvatarText);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, _concatInstanceProperty(_context = [this]).call(_context, args));\n\n    _defineProperty(_assertThisInitialized(_this), \"_scaleTextNode\", function (node) {\n      var retryTTL = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n      var _this$props = _this.props,\n          unstyled = _this$props.unstyled,\n          textSizeRatio = _this$props.textSizeRatio,\n          textMarginRatio = _this$props.textMarginRatio,\n          avatar = _this$props.avatar;\n      _this._node = node;\n      if (!node || !node.parentNode || unstyled || avatar.src || !_this._mounted) return;\n      var spanNode = node.parentNode;\n      var tableNode = spanNode.parentNode;\n\n      var _spanNode$getBounding = spanNode.getBoundingClientRect(),\n          containerWidth = _spanNode$getBounding.width,\n          containerHeight = _spanNode$getBounding.height; // Whenever the avatar element is not visible due to some CSS\n      // (such as display: none) on any parent component we will check\n      // whether the component has become visible.\n      //\n      // The time between checks grows up to half a second in an attempt\n      // to reduce flicker / performance issues.\n\n\n      if (containerWidth == 0 && containerHeight == 0) {\n        var ttl = Math.min(retryTTL * 1.5, 500);\n        setGroupedTimeout(function () {\n          return _this._scaleTextNode(node, ttl);\n        }, ttl);\n        return;\n      } // If the tableNode (outer-container) does not have its fontSize set yet,\n      // we'll set it according to \"textSizeRatio\"\n\n\n      if (!tableNode.style.fontSize) {\n        var baseFontSize = containerHeight / textSizeRatio;\n        tableNode.style.fontSize = \"\".concat(baseFontSize, \"px\");\n      } // Reset font-size such that scaling works correctly (#133)\n\n\n      spanNode.style.fontSize = null; // Measure the actual width of the text after setting the container size\n\n      var _node$getBoundingClie = node.getBoundingClientRect(),\n          textWidth = _node$getBoundingClie.width;\n\n      if (textWidth < 0) return; // Calculate the maximum width for the text based on \"textMarginRatio\"\n\n      var maxTextWidth = containerWidth * (1 - 2 * textMarginRatio); // If the text is too wide, scale it down by (maxWidth / actualWidth)\n\n      if (textWidth > maxTextWidth) spanNode.style.fontSize = \"calc(1em * \".concat(maxTextWidth / textWidth, \")\");\n    });\n\n    return _this;\n  }\n\n  _createClass(AvatarText, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._mounted = true;\n\n      this._scaleTextNode(this._node);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          round = _this$props2.round,\n          unstyled = _this$props2.unstyled,\n          title = _this$props2.title,\n          name = _this$props2.name,\n          value = _this$props2.value,\n          avatar = _this$props2.avatar;\n      var size = parseSize(this.props.size);\n      var initialsStyle = unstyled ? null : {\n        width: size.str,\n        height: size.str,\n        lineHeight: 'initial',\n        textAlign: 'center',\n        color: this.props.fgColor,\n        background: avatar.color,\n        borderRadius: calculateBorderRadius(round)\n      };\n      var tableStyle = unstyled ? null : {\n        display: 'table',\n        tableLayout: 'fixed',\n        width: '100%',\n        height: '100%'\n      };\n      var spanStyle = unstyled ? null : {\n        display: 'table-cell',\n        verticalAlign: 'middle',\n        fontSize: '100%',\n        whiteSpace: 'nowrap'\n      }; // Ensure the text node is updated and scaled when any of these\n      // values changed by calling the `_scaleTextNode` method using\n      // the correct `ref`.\n\n      var key = [avatar.value, this.props.size].join('');\n      return /*#__PURE__*/React.createElement(Wrapper, this.props, /*#__PURE__*/React.createElement(\"div\", {\n        className: className + ' sb-avatar__text',\n        style: initialsStyle,\n        title: getNullableText(title, name || value)\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: tableStyle\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: spanStyle\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        ref: this._scaleTextNode,\n        key: key\n      }, avatar.value)))));\n    }\n  }]);\n\n  return AvatarText;\n}(React.PureComponent);\n\n_defineProperty(AvatarText, \"propTypes\", {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  avatar: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  className: PropTypes.string,\n  unstyled: PropTypes.bool,\n  fgColor: PropTypes.string,\n  textSizeRatio: PropTypes.number,\n  textMarginRatio: PropTypes.number,\n  round: PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n});\n\n_defineProperty(AvatarText, \"defaultProps\", {\n  className: '',\n  fgColor: '#FFF',\n  round: false,\n  size: 100,\n  textSizeRatio: 3,\n  textMarginRatio: .15,\n  unstyled: false\n});\n\nexport { AvatarText as default };"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,0CAA0C;AACzE,OAAOC,eAAe,MAAM,uCAAuC;AACnE,OAAOC,YAAY,MAAM,oCAAoC;AAC7D,OAAOC,sBAAsB,MAAM,8CAA8C;AACjF,OAAOC,SAAS,MAAM,iCAAiC;AACvD,OAAOC,0BAA0B,MAAM,kDAAkD;AACzF,OAAOC,eAAe,MAAM,uCAAuC;AACnE,OAAOC,eAAe,MAAM,uCAAuC;AACnE,OAAOC,uBAAuB,MAAM,wCAAwC;AAE5E,SAASC,YAAYA,CAACC,OAAO,EAAE;EAAE,IAAIC,yBAAyB,GAAGC,yBAAyB,CAAC,CAAC;EAAE,OAAO,SAASC,oBAAoBA,CAAA,EAAG;IAAE,IAAIC,KAAK,GAAGR,eAAe,CAACI,OAAO,CAAC;MAAEK,MAAM;IAAE,IAAIJ,yBAAyB,EAAE;MAAE,IAAIK,SAAS,GAAGV,eAAe,CAAC,IAAI,CAAC,CAACW,WAAW;MAAEF,MAAM,GAAGf,kBAAkB,CAACc,KAAK,EAAEI,SAAS,EAAEF,SAAS,CAAC;IAAE,CAAC,MAAM;MAAED,MAAM,GAAGD,KAAK,CAACK,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;IAAE;IAAE,OAAOb,0BAA0B,CAAC,IAAI,EAAEU,MAAM,CAAC;EAAE,CAAC;AAAE;AAEza,SAASH,yBAAyBA,CAAA,EAAG;EAAE,IAAI,OAAOQ,OAAO,KAAK,WAAW,IAAI,CAACpB,kBAAkB,EAAE,OAAO,KAAK;EAAE,IAAIA,kBAAkB,CAACqB,IAAI,EAAE,OAAO,KAAK;EAAE,IAAI,OAAOC,KAAK,KAAK,UAAU,EAAE,OAAO,IAAI;EAAE,IAAI;IAAEC,OAAO,CAACC,SAAS,CAACC,OAAO,CAACC,IAAI,CAAC1B,kBAAkB,CAACuB,OAAO,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IAAE,OAAO,IAAI;EAAE,CAAC,CAAC,OAAOI,CAAC,EAAE;IAAE,OAAO,KAAK;EAAE;AAAE;AAE3U,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,eAAe,QAAQ,UAAU;AAE/F,IAAIC,UAAU,GAAG,aAAa,UAAUC,oBAAoB,EAAE;EAC5DhC,SAAS,CAAC+B,UAAU,EAAEC,oBAAoB,CAAC;EAE3C,IAAIC,MAAM,GAAG5B,YAAY,CAAC0B,UAAU,CAAC;EAErC,SAASA,UAAUA,CAAA,EAAG;IACpB,IAAIG,QAAQ;IAEZ,IAAIC,KAAK;IAETtC,eAAe,CAAC,IAAI,EAAEkC,UAAU,CAAC;IAEjC,KAAK,IAAIK,IAAI,GAAGtB,SAAS,CAACuB,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACH,IAAI,CAAC,EAAEI,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGJ,IAAI,EAAEI,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAG1B,SAAS,CAAC0B,IAAI,CAAC;IAC9B;IAEAL,KAAK,GAAGF,MAAM,CAACX,IAAI,CAACP,KAAK,CAACkB,MAAM,EAAE7B,uBAAuB,CAAC8B,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,CAACZ,IAAI,CAACY,QAAQ,EAAEI,IAAI,CAAC,CAAC;IAElGnC,eAAe,CAACJ,sBAAsB,CAACoC,KAAK,CAAC,EAAE,gBAAgB,EAAE,UAAUM,IAAI,EAAE;MAC/E,IAAIC,QAAQ,GAAG5B,SAAS,CAACuB,MAAM,GAAG,CAAC,IAAIvB,SAAS,CAAC,CAAC,CAAC,KAAK6B,SAAS,GAAG7B,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;MACrF,IAAI8B,WAAW,GAAGT,KAAK,CAACU,KAAK;QACzBC,QAAQ,GAAGF,WAAW,CAACE,QAAQ;QAC/BC,aAAa,GAAGH,WAAW,CAACG,aAAa;QACzCC,eAAe,GAAGJ,WAAW,CAACI,eAAe;QAC7CC,MAAM,GAAGL,WAAW,CAACK,MAAM;MAC/Bd,KAAK,CAACe,KAAK,GAAGT,IAAI;MAClB,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACU,UAAU,IAAIL,QAAQ,IAAIG,MAAM,CAACG,GAAG,IAAI,CAACjB,KAAK,CAACkB,QAAQ,EAAE;MAC5E,IAAIC,QAAQ,GAAGb,IAAI,CAACU,UAAU;MAC9B,IAAII,SAAS,GAAGD,QAAQ,CAACH,UAAU;MAEnC,IAAIK,qBAAqB,GAAGF,QAAQ,CAACG,qBAAqB,CAAC,CAAC;QACxDC,cAAc,GAAGF,qBAAqB,CAACG,KAAK;QAC5CC,eAAe,GAAGJ,qBAAqB,CAACK,MAAM,CAAC,CAAC;MACpD;MACA;MACA;MACA;MACA;;MAGA,IAAIH,cAAc,IAAI,CAAC,IAAIE,eAAe,IAAI,CAAC,EAAE;QAC/C,IAAIE,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACtB,QAAQ,GAAG,GAAG,EAAE,GAAG,CAAC;QACvCd,iBAAiB,CAAC,YAAY;UAC5B,OAAOO,KAAK,CAAC8B,cAAc,CAACxB,IAAI,EAAEqB,GAAG,CAAC;QACxC,CAAC,EAAEA,GAAG,CAAC;QACP;MACF,CAAC,CAAC;MACF;;MAGA,IAAI,CAACP,SAAS,CAACW,KAAK,CAACC,QAAQ,EAAE;QAC7B,IAAIC,YAAY,GAAGR,eAAe,GAAGb,aAAa;QAClDQ,SAAS,CAACW,KAAK,CAACC,QAAQ,GAAG,EAAE,CAACE,MAAM,CAACD,YAAY,EAAE,IAAI,CAAC;MAC1D,CAAC,CAAC;;MAGFd,QAAQ,CAACY,KAAK,CAACC,QAAQ,GAAG,IAAI,CAAC,CAAC;;MAEhC,IAAIG,qBAAqB,GAAG7B,IAAI,CAACgB,qBAAqB,CAAC,CAAC;QACpDc,SAAS,GAAGD,qBAAqB,CAACX,KAAK;MAE3C,IAAIY,SAAS,GAAG,CAAC,EAAE,OAAO,CAAC;;MAE3B,IAAIC,YAAY,GAAGd,cAAc,IAAI,CAAC,GAAG,CAAC,GAAGV,eAAe,CAAC,CAAC,CAAC;;MAE/D,IAAIuB,SAAS,GAAGC,YAAY,EAAElB,QAAQ,CAACY,KAAK,CAACC,QAAQ,GAAG,aAAa,CAACE,MAAM,CAACG,YAAY,GAAGD,SAAS,EAAE,GAAG,CAAC;IAC7G,CAAC,CAAC;IAEF,OAAOpC,KAAK;EACd;EAEArC,YAAY,CAACiC,UAAU,EAAE,CAAC;IACxB0C,GAAG,EAAE,mBAAmB;IACxBC,KAAK,EAAE,SAASC,iBAAiBA,CAAA,EAAG;MAClC,IAAI,CAACtB,QAAQ,GAAG,IAAI;MAEpB,IAAI,CAACY,cAAc,CAAC,IAAI,CAACf,KAAK,CAAC;IACjC;EACF,CAAC,EAAE;IACDuB,GAAG,EAAE,sBAAsB;IAC3BC,KAAK,EAAE,SAASE,oBAAoBA,CAAA,EAAG;MACrC,IAAI,CAACvB,QAAQ,GAAG,KAAK;IACvB;EACF,CAAC,EAAE;IACDoB,GAAG,EAAE,QAAQ;IACbC,KAAK,EAAE,SAASG,MAAMA,CAAA,EAAG;MACvB,IAAIC,YAAY,GAAG,IAAI,CAACjC,KAAK;QACzBkC,SAAS,GAAGD,YAAY,CAACC,SAAS;QAClCC,KAAK,GAAGF,YAAY,CAACE,KAAK;QAC1BlC,QAAQ,GAAGgC,YAAY,CAAChC,QAAQ;QAChCmC,KAAK,GAAGH,YAAY,CAACG,KAAK;QAC1BC,IAAI,GAAGJ,YAAY,CAACI,IAAI;QACxBR,KAAK,GAAGI,YAAY,CAACJ,KAAK;QAC1BzB,MAAM,GAAG6B,YAAY,CAAC7B,MAAM;MAChC,IAAIkC,IAAI,GAAGxD,SAAS,CAAC,IAAI,CAACkB,KAAK,CAACsC,IAAI,CAAC;MACrC,IAAIC,aAAa,GAAGtC,QAAQ,GAAG,IAAI,GAAG;QACpCa,KAAK,EAAEwB,IAAI,CAACE,GAAG;QACfxB,MAAM,EAAEsB,IAAI,CAACE,GAAG;QAChBC,UAAU,EAAE,SAAS;QACrBC,SAAS,EAAE,QAAQ;QACnBC,KAAK,EAAE,IAAI,CAAC3C,KAAK,CAAC4C,OAAO;QACzBC,UAAU,EAAEzC,MAAM,CAACuC,KAAK;QACxBG,YAAY,EAAE9D,qBAAqB,CAACmD,KAAK;MAC3C,CAAC;MACD,IAAIY,UAAU,GAAG9C,QAAQ,GAAG,IAAI,GAAG;QACjC+C,OAAO,EAAE,OAAO;QAChBC,WAAW,EAAE,OAAO;QACpBnC,KAAK,EAAE,MAAM;QACbE,MAAM,EAAE;MACV,CAAC;MACD,IAAIkC,SAAS,GAAGjD,QAAQ,GAAG,IAAI,GAAG;QAChC+C,OAAO,EAAE,YAAY;QACrBG,aAAa,EAAE,QAAQ;QACvB7B,QAAQ,EAAE,MAAM;QAChB8B,UAAU,EAAE;MACd,CAAC,CAAC,CAAC;MACH;MACA;;MAEA,IAAIxB,GAAG,GAAG,CAACxB,MAAM,CAACyB,KAAK,EAAE,IAAI,CAAC7B,KAAK,CAACsC,IAAI,CAAC,CAACe,IAAI,CAAC,EAAE,CAAC;MAClD,OAAO,aAAa1E,KAAK,CAAC2E,aAAa,CAACzE,OAAO,EAAE,IAAI,CAACmB,KAAK,EAAE,aAAarB,KAAK,CAAC2E,aAAa,CAAC,KAAK,EAAE;QACnGpB,SAAS,EAAEA,SAAS,GAAG,kBAAkB;QACzCb,KAAK,EAAEkB,aAAa;QACpBH,KAAK,EAAEnD,eAAe,CAACmD,KAAK,EAAEC,IAAI,IAAIR,KAAK;MAC7C,CAAC,EAAE,aAAalD,KAAK,CAAC2E,aAAa,CAAC,KAAK,EAAE;QACzCjC,KAAK,EAAE0B;MACT,CAAC,EAAE,aAAapE,KAAK,CAAC2E,aAAa,CAAC,MAAM,EAAE;QAC1CjC,KAAK,EAAE6B;MACT,CAAC,EAAE,aAAavE,KAAK,CAAC2E,aAAa,CAAC,MAAM,EAAE;QAC1CC,GAAG,EAAE,IAAI,CAACnC,cAAc;QACxBQ,GAAG,EAAEA;MACP,CAAC,EAAExB,MAAM,CAACyB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB;EACF,CAAC,CAAC,CAAC;EAEH,OAAO3C,UAAU;AACnB,CAAC,CAACP,KAAK,CAAC6E,aAAa,CAAC;AAEtBlG,eAAe,CAAC4B,UAAU,EAAE,WAAW,EAAE;EACvCmD,IAAI,EAAEzD,SAAS,CAAC6E,MAAM;EACtB5B,KAAK,EAAEjD,SAAS,CAAC6E,MAAM;EACvBrD,MAAM,EAAExB,SAAS,CAAC8E,MAAM;EACxBtB,KAAK,EAAExD,SAAS,CAAC+E,SAAS,CAAC,CAAC/E,SAAS,CAAC6E,MAAM,EAAE7E,SAAS,CAACgF,IAAI,CAAC,CAAC;EAC9D1B,SAAS,EAAEtD,SAAS,CAAC6E,MAAM;EAC3BxD,QAAQ,EAAErB,SAAS,CAACgF,IAAI;EACxBhB,OAAO,EAAEhE,SAAS,CAAC6E,MAAM;EACzBvD,aAAa,EAAEtB,SAAS,CAACiF,MAAM;EAC/B1D,eAAe,EAAEvB,SAAS,CAACiF,MAAM;EACjC1B,KAAK,EAAEvD,SAAS,CAAC+E,SAAS,CAAC,CAAC/E,SAAS,CAACgF,IAAI,EAAEhF,SAAS,CAAC6E,MAAM,EAAE7E,SAAS,CAACiF,MAAM,CAAC,CAAC;EAChFvB,IAAI,EAAE1D,SAAS,CAAC+E,SAAS,CAAC,CAAC/E,SAAS,CAACiF,MAAM,EAAEjF,SAAS,CAAC6E,MAAM,CAAC;AAChE,CAAC,CAAC;AAEFnG,eAAe,CAAC4B,UAAU,EAAE,cAAc,EAAE;EAC1CgD,SAAS,EAAE,EAAE;EACbU,OAAO,EAAE,MAAM;EACfT,KAAK,EAAE,KAAK;EACZG,IAAI,EAAE,GAAG;EACTpC,aAAa,EAAE,CAAC;EAChBC,eAAe,EAAE,GAAG;EACpBF,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,SAASf,UAAU,IAAI4E,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}