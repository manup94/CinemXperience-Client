{"ast":null,"code":"var _jsxFileName = \"/Users/ignaciogonzalez-bueno/Documents/IronHack/Week6/Day5/Project/CinemXperience-Client/client/src/components/ConfirmOrder/ConfirmOrder.jsx\";\nimport { Col, Container, Row, Button, Form, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  formatDate\n} = require('../../utils/formatDate');\nconst ConfirmOrder = _ref => {\n  let {\n    handleClose,\n    passes,\n    combo,\n    movie\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Modal.Body, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: \"sesions-form d-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estas comprando entrada para la pelicula \", movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        \"aria-label\": \"Default select example\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Selecciona una sesi\\xF3n disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), passes.map(elm => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elm.movieDate,\n            children: formatDate(elm.movieDate)\n          }, elm.movieId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 32\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        \"aria-label\": \"Default select example\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Selecciona un Combo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), combo.map(elm => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: elm._id,\n            children: elm.name\n          }, elm._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\"\n        // onClick={getPack} \n        ,\n        children: \"Confirmar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = ConfirmOrder;\nexport default ConfirmOrder;\nvar _c;\n$RefreshReg$(_c, \"ConfirmOrder\");","map":{"version":3,"names":["Col","Container","Row","Button","Form","Modal","jsxDEV","_jsxDEV","formatDate","require","ConfirmOrder","_ref","handleClose","passes","combo","movie","Body","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","Select","map","elm","value","movieDate","movieId","_id","name","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/ignaciogonzalez-bueno/Documents/IronHack/Week6/Day5/Project/CinemXperience-Client/client/src/components/ConfirmOrder/ConfirmOrder.jsx"],"sourcesContent":["import { Col, Container, Row, Button, Form, Modal } from \"react-bootstrap\"\nconst { formatDate } = require('../../utils/formatDate');\n\nconst ConfirmOrder = ({ handleClose, passes, combo, movie }) => {\n\n    return (\n        <Modal.Body>\n            <Form className=\"sesions-form d-block\">\n                <p>Estas comprando entrada para la pelicula {movie.title}</p>\n                <Form.Select aria-label=\"Default select example\">\n                    <option>Selecciona una sesi√≥n disponible</option>\n                    {passes.map((elm) => {\n\n                        return <option key={elm.movieId} value={elm.movieDate}>\n                            {\n                                formatDate(elm.movieDate)\n                            }\n                        </option>\n                    }\n                    )}\n\n                </Form.Select>\n                <Form.Select aria-label=\"Default select example\">\n                    <option>Selecciona un Combo</option>\n                    {combo.map((elm) => {\n                        return (\n                            <option key={elm._id} value={elm._id} >\n                                {elm.name}\n                            </option>\n                        );\n                    })}\n                </Form.Select>\n\n\n            </Form>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n                <Button variant=\"primary\"\n                // onClick={getPack} \n                >\n                    Confirmar\n                </Button>\n            </Modal.Footer>\n\n\n        </Modal.Body>\n    )\n}\n\nexport default ConfirmOrder"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}