{"ast":null,"code":"var _jsxFileName = \"/Users/ignaciogonzalez-bueno/Documents/IronHack/Week6/Day5/Project/CinemXperience-Client/client/src/pages/TopMovieDetailsPage/TopMovieDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../../context/auth.context\";\nimport profileService from \"../../services/profile.services\";\nimport { useParams } from \"react-router\";\nimport moviesServices from '../../services/movies.services';\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport './TopMovieDetailsPage.css';\nimport { MessageContext } from \"../../context/message.context\";\nimport { Link } from \"react-router-dom\";\nimport FormError from \"../../components/FormError/FormError\";\nimport { BASE_IMAGE_URL } from \"../../consts/movie-consts\";\nimport moviesService from \"../../services/movies.services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  formatDate\n} = require('../../utils/formatDate');\nconst MovieDetailsPage = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [profile, setProfile] = useState();\n  const {\n    movie_id\n  } = useParams();\n  const [movie, setMovie] = useState({});\n  const [watchlistMovies, setWatchlistMovies] = useState([]);\n  const {\n    emitMessage\n  } = useContext(MessageContext);\n  const [errors, setErrors] = useState([]);\n  useEffect(() => {\n    oneMovieFetch();\n    getUserInfo();\n  }, []);\n  const oneMovieFetch = () => {\n    moviesServices.getOneMovie(movie_id).then(_ref => {\n      let {\n        data\n      } = _ref;\n      return setMovie(data);\n    }).catch(err => console.log(err));\n  };\n  const addToWatchlist = () => {\n    profileService.AddWatchlistId(user._id, movie_id).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      const message = data ? 'AÃ±adido a Watchlist' : 'Ya existe en tu Watchlist';\n      emitMessage(message);\n    }).catch(err => console.log(err));\n  };\n  const getUserInfo = () => {\n    if (user && user._id) {\n      profileService.getOneProfile(user._id).then(_ref3 => {\n        let {\n          data\n        } = _ref3;\n        setProfile(data);\n        getWatchlist(data.watchList);\n      }).catch(err => console.log(err));\n    }\n  };\n  const getWatchlist = watchList => {\n    const promises = watchList.map(movieId => moviesServices.getOneMovie(movieId));\n    Promise.all(promises).then(responses => {\n      const moviesData = responses.map(_ref4 => {\n        let {\n          data\n        } = _ref4;\n        return data;\n      });\n      setWatchlistMovies(moviesData);\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-container\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex mt-5 \",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \" img-container\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img image\",\n            src: `${BASE_IMAGE_URL}${movie.poster_path}`,\n            alt: \"movie-poster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"details-container text-container\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex movie-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: movie.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: [\"Fecha de estreno: \", formatDate(movie.release_date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text\",\n            children: [\"Puntuaci\\xF3n media: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [user ? watchlistMovies.some(elm => elm.id == movie_id) ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-5\",\n              children: \"Ya est\\xE1 en tu Watchlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: addToWatchlist,\n              className: \"mt-5 btn btn-secondary\",\n              style: {\n                width: '150px'\n              },\n              children: \"Add to Watchlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              to: '/login',\n              className: \"sesions-form-btn\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Por favor, inicia sesi\\xF3n para a\\xF1adir a la Watchlist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 83\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 34\n            }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(FormError, {\n              children: errors.map(elm => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: elm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 81\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieDetailsPage, \"6TIX4IeWG8LoAhdpyYAlG+T4Qfs=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetailsPage;\nexport default MovieDetailsPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailsPage\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","profileService","useParams","moviesServices","Button","Col","Container","Row","MessageContext","Link","FormError","BASE_IMAGE_URL","moviesService","jsxDEV","_jsxDEV","formatDate","require","MovieDetailsPage","_s","user","profile","setProfile","movie_id","movie","setMovie","watchlistMovies","setWatchlistMovies","emitMessage","errors","setErrors","oneMovieFetch","getUserInfo","getOneMovie","then","_ref","data","catch","err","console","log","addToWatchlist","AddWatchlistId","_id","_ref2","message","getOneProfile","_ref3","getWatchlist","watchList","promises","map","movieId","Promise","all","responses","moviesData","_ref4","className","children","src","poster_path","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","overview","release_date","vote_average","some","elm","id","onClick","style","width","to","length","_c","$RefreshReg$"],"sources":["/Users/ignaciogonzalez-bueno/Documents/IronHack/Week6/Day5/Project/CinemXperience-Client/client/src/pages/TopMovieDetailsPage/TopMovieDetailsPage.jsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport { AuthContext } from \"../../context/auth.context\"\nimport profileService from \"../../services/profile.services\"\nimport { useParams } from \"react-router\"\nimport moviesServices from '../../services/movies.services'\nimport { Button, Col, Container, Row } from \"react-bootstrap\"\nimport './TopMovieDetailsPage.css'\nimport { MessageContext } from \"../../context/message.context\"\nimport { Link } from \"react-router-dom\"\nimport FormError from \"../../components/FormError/FormError\"\nimport { BASE_IMAGE_URL } from \"../../consts/movie-consts\"\nimport moviesService from \"../../services/movies.services\"\nconst { formatDate } = require('../../utils/formatDate');\n\n\nconst MovieDetailsPage = () => {\n\n    const { user } = useContext(AuthContext)\n\n    const [profile, setProfile] = useState()\n\n    const { movie_id } = useParams()\n\n    const [movie, setMovie] = useState({})\n\n    const [watchlistMovies, setWatchlistMovies] = useState([])\n\n    const { emitMessage } = useContext(MessageContext)\n\n    const [errors, setErrors] = useState([])\n\n\n    useEffect(() => {\n        oneMovieFetch()\n        getUserInfo()\n    }, [])\n\n    const oneMovieFetch = () => {\n        moviesServices\n            .getOneMovie(movie_id)\n            .then(({ data }) => setMovie(data))\n            .catch(err => console.log(err))\n    }\n\n    const addToWatchlist = () => {\n        profileService\n            .AddWatchlistId(user._id, movie_id)\n            .then(({ data }) => {\n                const message = data ? 'AÃ±adido a Watchlist' : 'Ya existe en tu Watchlist'\n                emitMessage(message)\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    const getUserInfo = () => {\n        if (user && user._id) {\n            profileService\n                .getOneProfile(user._id)\n                .then(({ data }) => {\n                    setProfile(data);\n                    getWatchlist(data.watchList)\n                })\n                .catch((err) => console.log(err));\n        }\n    }\n\n    const getWatchlist = (watchList) => {\n        const promises = watchList.map((movieId) =>\n            moviesServices\n                .getOneMovie(movieId)\n        );\n\n        Promise.all(promises)\n            .then((responses) => {\n                const moviesData = responses.map(({ data }) => data);\n                setWatchlistMovies(moviesData);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    return (\n        <div className=\"full-container\">\n            <Container className=\"d-flex mt-5 \">\n                <Col className=\" img-container\" >\n                    <Row>\n                        < img className=\"img image\" src={`${BASE_IMAGE_URL}${movie.poster_path}`} alt=\"movie-poster\" />\n                    </Row>\n\n                </Col>\n                <Col className=\"details-container text-container\">\n                    <Row className=\"d-flex movie-details\">\n                        <h1 className=\"text\">{movie.title}</h1>\n                        <p className=\"text\">{movie.overview}</p>\n                        <p className=\"text\">Fecha de estreno: {formatDate(movie.release_date)}</p>\n                        <p className=\"text\">PuntuaciÃ³n media: {movie.vote_average}</p>\n                        <div>\n                            {user\n                                ?\n                                (watchlistMovies.some(elm => elm.id == movie_id) ? (\n                                    <p className=\"mt-5\">Ya estÃ¡ en tu Watchlist</p>\n                                ) : (\n                                    <Button onClick={addToWatchlist} className=\"mt-5 btn btn-secondary\" style={{ width: '150px' }}>Add to Watchlist</Button>)\n                                )\n                                :\n                                (<Link to={'/login'} className=\"sesions-form-btn\"><Button>Por favor, inicia sesiÃ³n para aÃ±adir a la Watchlist</Button></Link>)}\n\n                            {errors.length > 0 && <FormError>{errors.map(elm => <p>{elm}</p>)}</FormError>}\n                        </div>\n\n                    </Row>\n                </Col>\n\n            </Container >\n        </div>\n    )\n}\n\nexport default MovieDetailsPage\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}