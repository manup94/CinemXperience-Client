{"ast":null,"code":"import { prepareColor } from \"../../../../internal/utils/prepareColor.js\";\nimport { BackgroundQualifier } from \"./BackgroundQualifier.js\";\n/**\n * @description Defines the background color to use when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BaseCommonBackground extends BackgroundQualifier {\n  constructor() {\n    super();\n    this._palette = [];\n  }\n  /**\n   * @description Selects the strongest contrasting color to use for padding.\n   * @return {this}\n   */\n  contrast() {\n    this._contrast = true;\n    return this;\n  }\n  /**\n   * @description Defines the custom colors to use when resizing using content-aware padding.\n   * @param {...string} colors One or more colors - Example: palette('green', 'red', blue')\n   * @return {this}\n   */\n  palette() {\n    for (var _len = arguments.length, colors = new Array(_len), _key = 0; _key < _len; _key++) {\n      colors[_key] = arguments[_key];\n    }\n    this._palette = colors.map(color => {\n      return prepareColor(color);\n    });\n    return this;\n  }\n}\nexport { BaseCommonBackground };","map":{"version":3,"names":["prepareColor","BackgroundQualifier","BaseCommonBackground","constructor","_palette","contrast","_contrast","palette","_len","arguments","length","colors","Array","_key","map","color"],"sources":["/Users/ignaciogonzalez-bueno/Documents/IronHack/Week6/Day5/Project/CinemXperience-Client/client/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/background/shared/base/BaseCommonBackground.js"],"sourcesContent":["import { prepareColor } from \"../../../../internal/utils/prepareColor.js\";\nimport { BackgroundQualifier } from \"./BackgroundQualifier.js\";\n/**\n * @description Defines the background color to use when resizing with padding.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BackgroundQualifier}\n */\nclass BaseCommonBackground extends BackgroundQualifier {\n    constructor() {\n        super();\n        this._palette = [];\n    }\n    /**\n     * @description Selects the strongest contrasting color to use for padding.\n     * @return {this}\n     */\n    contrast() {\n        this._contrast = true;\n        return this;\n    }\n    /**\n     * @description Defines the custom colors to use when resizing using content-aware padding.\n     * @param {...string} colors One or more colors - Example: palette('green', 'red', blue')\n     * @return {this}\n     */\n    palette(...colors) {\n        this._palette = colors.map((color) => {\n            return prepareColor(color);\n        });\n        return this;\n    }\n}\nexport { BaseCommonBackground };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,4CAA4C;AACzE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,SAASD,mBAAmB,CAAC;EACnDE,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,QAAQ,GAAG,EAAE;EACtB;EACA;AACJ;AACA;AACA;EACIC,QAAQA,CAAA,EAAG;IACP,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;EACIC,OAAOA,CAAA,EAAY;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAARC,MAAM,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAANF,MAAM,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IACb,IAAI,CAACT,QAAQ,GAAGO,MAAM,CAACG,GAAG,CAAEC,KAAK,IAAK;MAClC,OAAOf,YAAY,CAACe,KAAK,CAAC;IAC9B,CAAC,CAAC;IACF,OAAO,IAAI;EACf;AACJ;AACA,SAASb,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}